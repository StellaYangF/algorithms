{
  "version": 3,
  "sources": ["../src/twoSum.ts", "../src/hasCycle.ts"],
  "sourcesContent": ["// \u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u6574\u6570\u76EE\u6807\u503C target\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA \u548C\u4E3A\u76EE\u6807\u503C target  \u7684\u90A3 \u4E24\u4E2A \u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u5B83\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002\n\n// \u4F60\u53EF\u4EE5\u5047\u8BBE\u6BCF\u79CD\u8F93\u5165\u53EA\u4F1A\u5BF9\u5E94\u4E00\u4E2A\u7B54\u6848\u3002\u4F46\u662F\uFF0C\u6570\u7EC4\u4E2D\u540C\u4E00\u4E2A\u5143\u7D20\u5728\u7B54\u6848\u91CC\u4E0D\u80FD\u91CD\u590D\u51FA\u73B0\u3002\n\n// \u4F60\u53EF\u4EE5\u6309\u4EFB\u610F\u987A\u5E8F\u8FD4\u56DE\u7B54\u6848\u3002\n// \u8F93\u5165\uFF1Anums = [2,7,11,15], target = 9\n// \u8F93\u51FA\uFF1A[0,1]\n// \u89E3\u91CA\uFF1A\u56E0\u4E3A nums[0] + nums[1] == 9 \uFF0C\u8FD4\u56DE [0, 1] \u3002\n\n// 96ms, 42.7MB\n// \u4E24\u5C42 for \u5FAA\u73AF\uFF0C\u65F6\u7A7A\u590D\u6742\u5EA6\u4E3A O(N2)/ O(1)\nexport function twoSum(nums: number[], target: number): number[] {\n  const len = nums.length\n\n  for (let i = 0; i < len; i++) {\n    for (let j = i + 1; j < len; j++) {\n      if (nums[i] + nums[j] === target) {\n        return [i, j]\n      }\n    }\n  }\n\n  // no matching result\n  return []\n};\n\n// time: 64ms\n// memory: 43.7MB\n// \u5355\u6B21\u5FAA\u73AF\uFF0C\u5BF9\u8FED\u4EE3\u8FC7\u7684\u6570\u636E\u8FDB\u884C\u6807\u8BB0(value: key)\n// \u65F6\u7A7A\u590D\u6742\u5EA6\uFF1AO(N)/ O(N)\nfunction twoSum0(nums: number[], target: number): number[] {\n  const hasMap = Object.create(null)\n\n  for (let i = 0; i < nums.length; i++) {\n    const cur = nums[i]\n    const existingIndex = hasMap[target - cur]\n\n    if (existingIndex >= 0) {\n      return [existingIndex, i]\n    }\n    hasMap[cur] = i\n  }\n\n  return []\n}\n\n// Note:\n// Map must use API (has, set, get...)\n// if m[1] = 0,  m.has(1) => undefined\n// if m.set(1, 1), m[0] => {1, 1} \n// time: 80s\n// memory: 44.7B\nfunction twoSum1(nums: number[], target: number): number[] {\n  const map = new Map\n  for (let i = 0; i < nums.length; i++) {\n    if (map.has(target - nums[i])) {\n      return [map.get(target - nums[i]), i]\n    }\n    map.set(nums[i], i)\n  }\n\n  return []\n}", "// class Node {\n//   constructor(public element: any, public next) { }\n// }\n\nclass ListNode {\n  constructor(public val?: number, public next?: ListNode | null) {\n  }\n}\n\nfunction createListNode(array: number[], pos: number): ListNode {\n  const len = array.length\n\n  if (len < 1) {\n    return new ListNode()\n  }\n\n  let prev = new ListNode(array[0], null)\n  let anchorNext\n  for (let i = 1; i++; i < len) {\n    const next = prev.next = new ListNode(array[i], null)\n    prev = next\n\n    if (pos === i) {\n      anchorNext = next\n    }\n  }\n\n  if (anchorNext) {\n    prev.next = anchorNext\n  }\n\n  return prev\n}\n\nconsole.log(createListNode([3, 2, 0, -4], 1))\n\n\n\nexport function hasCycle(head): boolean {\n  if (head == null) { return false }\n\n  let slow = head\n  let fast = head\n\n  while (fast.next !== null && fast.next.next !== null) {\n    slow = slow.next\n    fast = fast.next.next\n\n    if (slow === fast) {\n      return true\n    }\n  }\n\n  return false\n}\n\n// TODO: test"],
  "mappings": ";;AAWO,WAAS,OAAO,MAAgB,QAA0B;AAC/D,UAAM,MAAM,KAAK;AAEjB,aAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,eAAS,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK;AAChC,YAAI,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,QAAQ;AAChC,iBAAO,CAAC,GAAG,CAAC;AAAA,QACd;AAAA,MACF;AAAA,IACF;AAGA,WAAO,CAAC;AAAA,EACV;;;ACpBA,MAAM,WAAN,MAAe;AAAA,IACb,YAAmB,KAAqB,MAAwB;AAA7C;AAAqB;AAAA,IACxC;AAAA,EACF;AAEA,WAAS,eAAe,OAAiB,KAAuB;AAC9D,UAAM,MAAM,MAAM;AAElB,QAAI,MAAM,GAAG;AACX,aAAO,IAAI,SAAS;AAAA,IACtB;AAEA,QAAI,OAAO,IAAI,SAAS,MAAM,CAAC,GAAG,IAAI;AACtC,QAAI;AACJ,aAAS,IAAI,GAAG,KAAK,IAAI,KAAK;AAC5B,YAAM,OAAO,KAAK,OAAO,IAAI,SAAS,MAAM,CAAC,GAAG,IAAI;AACpD,aAAO;AAEP,UAAI,QAAQ,GAAG;AACb,qBAAa;AAAA,MACf;AAAA,IACF;AAEA,QAAI,YAAY;AACd,WAAK,OAAO;AAAA,IACd;AAEA,WAAO;AAAA,EACT;AAEA,UAAQ,IAAI,eAAe,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;AAIrC,WAAS,SAAS,MAAe;AACtC,QAAI,QAAQ,MAAM;AAAE,aAAO;AAAA,IAAM;AAEjC,QAAI,OAAO;AACX,QAAI,OAAO;AAEX,WAAO,KAAK,SAAS,QAAQ,KAAK,KAAK,SAAS,MAAM;AACpD,aAAO,KAAK;AACZ,aAAO,KAAK,KAAK;AAEjB,UAAI,SAAS,MAAM;AACjB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,WAAO;AAAA,EACT;",
  "names": []
}
